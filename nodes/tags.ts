export enum NodeTag {
	T_Invalid = 'T_Invalid',

	/*
	 * TAGS FOR EXECUTOR NODES (execnodes.h)
	 */
	T_IndexInfo = 'T_IndexInfo',
	T_ExprContext = 'T_ExprContext',
	T_ProjectionInfo = 'T_ProjectionInfo',
	T_JunkFilter = 'T_JunkFilter',
	T_OnConflictSetState = 'T_OnConflictSetState',
	T_ResultRelInfo = 'T_ResultRelInfo',
	T_EState = 'T_EState',
	T_TupleTableSlot = 'T_TupleTableSlot',

	/*
	 * TAGS FOR PLAN NODES (plannodes.h)
	 */
	T_Plan = 'T_Plan',
	T_Result = 'T_Result',
	T_ProjectSet = 'T_ProjectSet',
	T_ModifyTable = 'T_ModifyTable',
	T_Append = 'T_Append',
	T_MergeAppend = 'T_MergeAppend',
	T_RecursiveUnion = 'T_RecursiveUnion',
	T_BitmapAnd = 'T_BitmapAnd',
	T_BitmapOr = 'T_BitmapOr',
	T_Scan = 'T_Scan',
	T_SeqScan = 'T_SeqScan',
	T_SampleScan = 'T_SampleScan',
	T_IndexScan = 'T_IndexScan',
	T_IndexOnlyScan = 'T_IndexOnlyScan',
	T_BitmapIndexScan = 'T_BitmapIndexScan',
	T_BitmapHeapScan = 'T_BitmapHeapScan',
	T_TidScan = 'T_TidScan',
	T_SubqueryScan = 'T_SubqueryScan',
	T_FunctionScan = 'T_FunctionScan',
	T_ValuesScan = 'T_ValuesScan',
	T_TableFuncScan = 'T_TableFuncScan',
	T_CteScan = 'T_CteScan',
	T_NamedTuplestoreScan = 'T_NamedTuplestoreScan',
	T_WorkTableScan = 'T_WorkTableScan',
	T_ForeignScan = 'T_ForeignScan',
	T_CustomScan = 'T_CustomScan',
	T_Join = 'T_Join',
	T_NestLoop = 'T_NestLoop',
	T_MergeJoin = 'T_MergeJoin',
	T_HashJoin = 'T_HashJoin',
	T_Material = 'T_Material',
	T_Sort = 'T_Sort',
	T_Group = 'T_Group',
	T_Agg = 'T_Agg',
	T_WindowAgg = 'T_WindowAgg',
	T_Unique = 'T_Unique',
	T_Gather = 'T_Gather',
	T_GatherMerge = 'T_GatherMerge',
	T_Hash = 'T_Hash',
	T_SetOp = 'T_SetOp',
	T_LockRows = 'T_LockRows',
	T_Limit = 'T_Limit',
	/* these aren't subclasses of Plan: */
	T_NestLoopParam = 'T_NestLoopParam',
	T_PlanRowMark = 'T_PlanRowMark',
	T_PartitionPruneInfo = 'T_PartitionPruneInfo',
	T_PartitionedRelPruneInfo = 'T_PartitionedRelPruneInfo',
	T_PartitionPruneStepOp = 'T_PartitionPruneStepOp',
	T_PartitionPruneStepCombine = 'T_PartitionPruneStepCombine',
	T_PlanInvalItem = 'T_PlanInvalItem',

	/*
	 * TAGS FOR PLAN STATE NODES (execnodes.h)
	 *
	 * These should correspond one-to-one with Plan node types.
	 */
	T_PlanState = 'T_PlanState',
	T_ResultState = 'T_ResultState',
	T_ProjectSetState = 'T_ProjectSetState',
	T_ModifyTableState = 'T_ModifyTableState',
	T_AppendState = 'T_AppendState',
	T_MergeAppendState = 'T_MergeAppendState',
	T_RecursiveUnionState = 'T_RecursiveUnionState',
	T_BitmapAndState = 'T_BitmapAndState',
	T_BitmapOrState = 'T_BitmapOrState',
	T_ScanState = 'T_ScanState',
	T_SeqScanState = 'T_SeqScanState',
	T_SampleScanState = 'T_SampleScanState',
	T_IndexScanState = 'T_IndexScanState',
	T_IndexOnlyScanState = 'T_IndexOnlyScanState',
	T_BitmapIndexScanState = 'T_BitmapIndexScanState',
	T_BitmapHeapScanState = 'T_BitmapHeapScanState',
	T_TidScanState = 'T_TidScanState',
	T_SubqueryScanState = 'T_SubqueryScanState',
	T_FunctionScanState = 'T_FunctionScanState',
	T_TableFuncScanState = 'T_TableFuncScanState',
	T_ValuesScanState = 'T_ValuesScanState',
	T_CteScanState = 'T_CteScanState',
	T_NamedTuplestoreScanState = 'T_NamedTuplestoreScanState',
	T_WorkTableScanState = 'T_WorkTableScanState',
	T_ForeignScanState = 'T_ForeignScanState',
	T_CustomScanState = 'T_CustomScanState',
	T_JoinState = 'T_JoinState',
	T_NestLoopState = 'T_NestLoopState',
	T_MergeJoinState = 'T_MergeJoinState',
	T_HashJoinState = 'T_HashJoinState',
	T_MaterialState = 'T_MaterialState',
	T_SortState = 'T_SortState',
	T_GroupState = 'T_GroupState',
	T_AggState = 'T_AggState',
	T_WindowAggState = 'T_WindowAggState',
	T_UniqueState = 'T_UniqueState',
	T_GatherState = 'T_GatherState',
	T_GatherMergeState = 'T_GatherMergeState',
	T_HashState = 'T_HashState',
	T_SetOpState = 'T_SetOpState',
	T_LockRowsState = 'T_LockRowsState',
	T_LimitState = 'T_LimitState',

	/*
	 * TAGS FOR PRIMITIVE NODES (primnodes.h)
	 */
	T_Alias = 'T_Alias',
	T_RangeVar = 'T_RangeVar',
	T_TableFunc = 'T_TableFunc',
	T_Expr = 'T_Expr',
	T_Var = 'T_Var',
	T_Const = 'T_Const',
	T_Param = 'T_Param',
	T_Aggref = 'T_Aggref',
	T_GroupingFunc = 'T_GroupingFunc',
	T_WindowFunc = 'T_WindowFunc',
	T_SubscriptingRef = 'T_SubscriptingRef',
	T_FuncExpr = 'T_FuncExpr',
	T_NamedArgExpr = 'T_NamedArgExpr',
	T_OpExpr = 'T_OpExpr',
	T_DistinctExpr = 'T_DistinctExpr',
	T_NullIfExpr = 'T_NullIfExpr',
	T_ScalarArrayOpExpr = 'T_ScalarArrayOpExpr',
	T_BoolExpr = 'T_BoolExpr',
	T_SubLink = 'T_SubLink',
	T_SubPlan = 'T_SubPlan',
	T_AlternativeSubPlan = 'T_AlternativeSubPlan',
	T_FieldSelect = 'T_FieldSelect',
	T_FieldStore = 'T_FieldStore',
	T_RelabelType = 'T_RelabelType',
	T_CoerceViaIO = 'T_CoerceViaIO',
	T_ArrayCoerceExpr = 'T_ArrayCoerceExpr',
	T_ConvertRowtypeExpr = 'T_ConvertRowtypeExpr',
	T_CollateExpr = 'T_CollateExpr',
	T_CaseExpr = 'T_CaseExpr',
	T_CaseWhen = 'T_CaseWhen',
	T_CaseTestExpr = 'T_CaseTestExpr',
	T_ArrayExpr = 'T_ArrayExpr',
	T_RowExpr = 'T_RowExpr',
	T_RowCompareExpr = 'T_RowCompareExpr',
	T_CoalesceExpr = 'T_CoalesceExpr',
	T_MinMaxExpr = 'T_MinMaxExpr',
	T_SQLValueFunction = 'T_SQLValueFunction',
	T_XmlExpr = 'T_XmlExpr',
	T_NullTest = 'T_NullTest',
	T_BooleanTest = 'T_BooleanTest',
	T_CoerceToDomain = 'T_CoerceToDomain',
	T_CoerceToDomainValue = 'T_CoerceToDomainValue',
	T_SetToDefault = 'T_SetToDefault',
	T_CurrentOfExpr = 'T_CurrentOfExpr',
	T_NextValueExpr = 'T_NextValueExpr',
	T_InferenceElem = 'T_InferenceElem',
	T_TargetEntry = 'T_TargetEntry',
	T_RangeTblRef = 'T_RangeTblRef',
	T_JoinExpr = 'T_JoinExpr',
	T_FromExpr = 'T_FromExpr',
	T_OnConflictExpr = 'T_OnConflictExpr',
	T_IntoClause = 'T_IntoClause',

	/*
	 * TAGS FOR EXPRESSION STATE NODES (execnodes.h)
	 *
	 * ExprState represents the evaluation state for a whole expression tree.
	 * Most Expr-based plan nodes do not have a corresponding expression state
	 * node, they're fully handled within execExpr* - but sometimes the state
	 * needs to be shared with other parts of the executor, as for example
	 * with AggrefExprState, which nodeAgg.c has to modify.
	 */
	T_ExprState = 'T_ExprState',
	T_AggrefExprState = 'T_AggrefExprState',
	T_WindowFuncExprState = 'T_WindowFuncExprState',
	T_SetExprState = 'T_SetExprState',
	T_SubPlanState = 'T_SubPlanState',
	T_AlternativeSubPlanState = 'T_AlternativeSubPlanState',
	T_DomainConstraintState = 'T_DomainConstraintState',

	/*
	 * TAGS FOR PLANNER NODES (pathnodes.h)
	 */
	T_PlannerInfo = 'T_PlannerInfo',
	T_PlannerGlobal = 'T_PlannerGlobal',
	T_RelOptInfo = 'T_RelOptInfo',
	T_IndexOptInfo = 'T_IndexOptInfo',
	T_ForeignKeyOptInfo = 'T_ForeignKeyOptInfo',
	T_ParamPathInfo = 'T_ParamPathInfo',
	T_Path = 'T_Path',
	T_IndexPath = 'T_IndexPath',
	T_BitmapHeapPath = 'T_BitmapHeapPath',
	T_BitmapAndPath = 'T_BitmapAndPath',
	T_BitmapOrPath = 'T_BitmapOrPath',
	T_TidPath = 'T_TidPath',
	T_SubqueryScanPath = 'T_SubqueryScanPath',
	T_ForeignPath = 'T_ForeignPath',
	T_CustomPath = 'T_CustomPath',
	T_NestPath = 'T_NestPath',
	T_MergePath = 'T_MergePath',
	T_HashPath = 'T_HashPath',
	T_AppendPath = 'T_AppendPath',
	T_MergeAppendPath = 'T_MergeAppendPath',
	T_GroupResultPath = 'T_GroupResultPath',
	T_MaterialPath = 'T_MaterialPath',
	T_UniquePath = 'T_UniquePath',
	T_GatherPath = 'T_GatherPath',
	T_GatherMergePath = 'T_GatherMergePath',
	T_ProjectionPath = 'T_ProjectionPath',
	T_ProjectSetPath = 'T_ProjectSetPath',
	T_SortPath = 'T_SortPath',
	T_GroupPath = 'T_GroupPath',
	T_UpperUniquePath = 'T_UpperUniquePath',
	T_AggPath = 'T_AggPath',
	T_GroupingSetsPath = 'T_GroupingSetsPath',
	T_MinMaxAggPath = 'T_MinMaxAggPath',
	T_WindowAggPath = 'T_WindowAggPath',
	T_SetOpPath = 'T_SetOpPath',
	T_RecursiveUnionPath = 'T_RecursiveUnionPath',
	T_LockRowsPath = 'T_LockRowsPath',
	T_ModifyTablePath = 'T_ModifyTablePath',
	T_LimitPath = 'T_LimitPath',
	/* these aren't subclasses of Path: */
	T_EquivalenceClass = 'T_EquivalenceClass',
	T_EquivalenceMember = 'T_EquivalenceMember',
	T_PathKey = 'T_PathKey',
	T_PathTarget = 'T_PathTarget',
	T_RestrictInfo = 'T_RestrictInfo',
	T_IndexClause = 'T_IndexClause',
	T_PlaceHolderVar = 'T_PlaceHolderVar',
	T_SpecialJoinInfo = 'T_SpecialJoinInfo',
	T_AppendRelInfo = 'T_AppendRelInfo',
	T_PlaceHolderInfo = 'T_PlaceHolderInfo',
	T_MinMaxAggInfo = 'T_MinMaxAggInfo',
	T_PlannerParamItem = 'T_PlannerParamItem',
	T_RollupData = 'T_RollupData',
	T_GroupingSetData = 'T_GroupingSetData',
	T_StatisticExtInfo = 'T_StatisticExtInfo',

	/*
	 * TAGS FOR MEMORY NODES (memnodes.h)
	 */
	T_MemoryContext = 'T_MemoryContext',
	T_AllocSetContext = 'T_AllocSetContext',
	T_SlabContext = 'T_SlabContext',
	T_GenerationContext = 'T_GenerationContext',

	/*
	 * TAGS FOR VALUE NODES (value.h)
	 */
	T_Value = 'T_Value',
	T_Integer = 'T_Integer',
	T_Float = 'T_Float',
	T_String = 'T_String',
	T_BitString = 'T_BitString',
	T_Null = 'T_Null',

	/*
	 * TAGS FOR LIST NODES (pg_list.h)
	 */
	T_List = 'T_List',
	T_IntList = 'T_IntList',
	T_OidList = 'T_OidList',

	/*
	 * TAGS FOR EXTENSIBLE NODES (extensible.h)
	 */
	T_ExtensibleNode = 'T_ExtensibleNode',

	/*
	 * TAGS FOR STATEMENT NODES (mostly in parsenodes.h)
	 */
	T_RawStmt = 'T_RawStmt',
	T_Query = 'T_Query',
	T_PlannedStmt = 'T_PlannedStmt',
	T_InsertStmt = 'T_InsertStmt',
	T_DeleteStmt = 'T_DeleteStmt',
	T_UpdateStmt = 'T_UpdateStmt',
	T_SelectStmt = 'T_SelectStmt',
	T_AlterTableStmt = 'T_AlterTableStmt',
	T_AlterTableCmd = 'T_AlterTableCmd',
	T_AlterDomainStmt = 'T_AlterDomainStmt',
	T_SetOperationStmt = 'T_SetOperationStmt',
	T_GrantStmt = 'T_GrantStmt',
	T_GrantRoleStmt = 'T_GrantRoleStmt',
	T_AlterDefaultPrivilegesStmt = 'T_AlterDefaultPrivilegesStmt',
	T_ClosePortalStmt = 'T_ClosePortalStmt',
	T_ClusterStmt = 'T_ClusterStmt',
	T_CopyStmt = 'T_CopyStmt',
	T_CreateStmt = 'T_CreateStmt',
	T_DefineStmt = 'T_DefineStmt',
	T_DropStmt = 'T_DropStmt',
	T_TruncateStmt = 'T_TruncateStmt',
	T_CommentStmt = 'T_CommentStmt',
	T_FetchStmt = 'T_FetchStmt',
	T_IndexStmt = 'T_IndexStmt',
	T_CreateFunctionStmt = 'T_CreateFunctionStmt',
	T_AlterFunctionStmt = 'T_AlterFunctionStmt',
	T_DoStmt = 'T_DoStmt',
	T_RenameStmt = 'T_RenameStmt',
	T_RuleStmt = 'T_RuleStmt',
	T_NotifyStmt = 'T_NotifyStmt',
	T_ListenStmt = 'T_ListenStmt',
	T_UnlistenStmt = 'T_UnlistenStmt',
	T_TransactionStmt = 'T_TransactionStmt',
	T_ViewStmt = 'T_ViewStmt',
	T_LoadStmt = 'T_LoadStmt',
	T_CreateDomainStmt = 'T_CreateDomainStmt',
	T_CreatedbStmt = 'T_CreatedbStmt',
	T_DropdbStmt = 'T_DropdbStmt',
	T_VacuumStmt = 'T_VacuumStmt',
	T_ExplainStmt = 'T_ExplainStmt',
	T_CreateTableAsStmt = 'T_CreateTableAsStmt',
	T_CreateSeqStmt = 'T_CreateSeqStmt',
	T_AlterSeqStmt = 'T_AlterSeqStmt',
	T_VariableSetStmt = 'T_VariableSetStmt',
	T_VariableShowStmt = 'T_VariableShowStmt',
	T_DiscardStmt = 'T_DiscardStmt',
	T_CreateTrigStmt = 'T_CreateTrigStmt',
	T_CreatePLangStmt = 'T_CreatePLangStmt',
	T_CreateRoleStmt = 'T_CreateRoleStmt',
	T_AlterRoleStmt = 'T_AlterRoleStmt',
	T_DropRoleStmt = 'T_DropRoleStmt',
	T_LockStmt = 'T_LockStmt',
	T_ConstraintsSetStmt = 'T_ConstraintsSetStmt',
	T_ReindexStmt = 'T_ReindexStmt',
	T_CheckPointStmt = 'T_CheckPointStmt',
	T_CreateSchemaStmt = 'T_CreateSchemaStmt',
	T_AlterDatabaseStmt = 'T_AlterDatabaseStmt',
	T_AlterDatabaseSetStmt = 'T_AlterDatabaseSetStmt',
	T_AlterRoleSetStmt = 'T_AlterRoleSetStmt',
	T_CreateConversionStmt = 'T_CreateConversionStmt',
	T_CreateCastStmt = 'T_CreateCastStmt',
	T_CreateOpClassStmt = 'T_CreateOpClassStmt',
	T_CreateOpFamilyStmt = 'T_CreateOpFamilyStmt',
	T_AlterOpFamilyStmt = 'T_AlterOpFamilyStmt',
	T_PrepareStmt = 'T_PrepareStmt',
	T_ExecuteStmt = 'T_ExecuteStmt',
	T_DeallocateStmt = 'T_DeallocateStmt',
	T_DeclareCursorStmt = 'T_DeclareCursorStmt',
	T_CreateTableSpaceStmt = 'T_CreateTableSpaceStmt',
	T_DropTableSpaceStmt = 'T_DropTableSpaceStmt',
	T_AlterObjectDependsStmt = 'T_AlterObjectDependsStmt',
	T_AlterObjectSchemaStmt = 'T_AlterObjectSchemaStmt',
	T_AlterOwnerStmt = 'T_AlterOwnerStmt',
	T_AlterOperatorStmt = 'T_AlterOperatorStmt',
	T_DropOwnedStmt = 'T_DropOwnedStmt',
	T_ReassignOwnedStmt = 'T_ReassignOwnedStmt',
	T_CompositeTypeStmt = 'T_CompositeTypeStmt',
	T_CreateEnumStmt = 'T_CreateEnumStmt',
	T_CreateRangeStmt = 'T_CreateRangeStmt',
	T_AlterEnumStmt = 'T_AlterEnumStmt',
	T_AlterTSDictionaryStmt = 'T_AlterTSDictionaryStmt',
	T_AlterTSConfigurationStmt = 'T_AlterTSConfigurationStmt',
	T_CreateFdwStmt = 'T_CreateFdwStmt',
	T_AlterFdwStmt = 'T_AlterFdwStmt',
	T_CreateForeignServerStmt = 'T_CreateForeignServerStmt',
	T_AlterForeignServerStmt = 'T_AlterForeignServerStmt',
	T_CreateUserMappingStmt = 'T_CreateUserMappingStmt',
	T_AlterUserMappingStmt = 'T_AlterUserMappingStmt',
	T_DropUserMappingStmt = 'T_DropUserMappingStmt',
	T_AlterTableSpaceOptionsStmt = 'T_AlterTableSpaceOptionsStmt',
	T_AlterTableMoveAllStmt = 'T_AlterTableMoveAllStmt',
	T_SecLabelStmt = 'T_SecLabelStmt',
	T_CreateForeignTableStmt = 'T_CreateForeignTableStmt',
	T_ImportForeignSchemaStmt = 'T_ImportForeignSchemaStmt',
	T_CreateExtensionStmt = 'T_CreateExtensionStmt',
	T_AlterExtensionStmt = 'T_AlterExtensionStmt',
	T_AlterExtensionContentsStmt = 'T_AlterExtensionContentsStmt',
	T_CreateEventTrigStmt = 'T_CreateEventTrigStmt',
	T_AlterEventTrigStmt = 'T_AlterEventTrigStmt',
	T_RefreshMatViewStmt = 'T_RefreshMatViewStmt',
	T_ReplicaIdentityStmt = 'T_ReplicaIdentityStmt',
	T_AlterSystemStmt = 'T_AlterSystemStmt',
	T_CreatePolicyStmt = 'T_CreatePolicyStmt',
	T_AlterPolicyStmt = 'T_AlterPolicyStmt',
	T_CreateTransformStmt = 'T_CreateTransformStmt',
	T_CreateAmStmt = 'T_CreateAmStmt',
	T_CreatePublicationStmt = 'T_CreatePublicationStmt',
	T_AlterPublicationStmt = 'T_AlterPublicationStmt',
	T_CreateSubscriptionStmt = 'T_CreateSubscriptionStmt',
	T_AlterSubscriptionStmt = 'T_AlterSubscriptionStmt',
	T_DropSubscriptionStmt = 'T_DropSubscriptionStmt',
	T_CreateStatsStmt = 'T_CreateStatsStmt',
	T_AlterCollationStmt = 'T_AlterCollationStmt',
	T_CallStmt = 'T_CallStmt',
	T_AlterStatsStmt = 'T_AlterStatsStmt',

	/*
	 * TAGS FOR PARSE TREE NODES (parsenodes.h)
	 */
	T_A_Expr = 'T_A_Expr',
	T_ColumnRef = 'T_ColumnRef',
	T_ParamRef = 'T_ParamRef',
	T_A_Const = 'T_A_Const',
	T_FuncCall = 'T_FuncCall',
	T_A_Star = 'T_A_Star',
	T_A_Indices = 'T_A_Indices',
	T_A_Indirection = 'T_A_Indirection',
	T_A_ArrayExpr = 'T_A_ArrayExpr',
	T_ResTarget = 'T_ResTarget',
	T_MultiAssignRef = 'T_MultiAssignRef',
	T_TypeCast = 'T_TypeCast',
	T_CollateClause = 'T_CollateClause',
	T_SortBy = 'T_SortBy',
	T_WindowDef = 'T_WindowDef',
	T_RangeSubselect = 'T_RangeSubselect',
	T_RangeFunction = 'T_RangeFunction',
	T_RangeTableSample = 'T_RangeTableSample',
	T_RangeTableFunc = 'T_RangeTableFunc',
	T_RangeTableFuncCol = 'T_RangeTableFuncCol',
	T_TypeName = 'T_TypeName',
	T_ColumnDef = 'T_ColumnDef',
	T_IndexElem = 'T_IndexElem',
	T_Constraint = 'T_Constraint',
	T_DefElem = 'T_DefElem',
	T_RangeTblEntry = 'T_RangeTblEntry',
	T_RangeTblFunction = 'T_RangeTblFunction',
	T_TableSampleClause = 'T_TableSampleClause',
	T_WithCheckOption = 'T_WithCheckOption',
	T_SortGroupClause = 'T_SortGroupClause',
	T_GroupingSet = 'T_GroupingSet',
	T_WindowClause = 'T_WindowClause',
	T_ObjectWithArgs = 'T_ObjectWithArgs',
	T_AccessPriv = 'T_AccessPriv',
	T_CreateOpClassItem = 'T_CreateOpClassItem',
	T_TableLikeClause = 'T_TableLikeClause',
	T_FunctionParameter = 'T_FunctionParameter',
	T_LockingClause = 'T_LockingClause',
	T_RowMarkClause = 'T_RowMarkClause',
	T_XmlSerialize = 'T_XmlSerialize',
	T_WithClause = 'T_WithClause',
	T_InferClause = 'T_InferClause',
	T_OnConflictClause = 'T_OnConflictClause',
	T_CommonTableExpr = 'T_CommonTableExpr',
	T_RoleSpec = 'T_RoleSpec',
	T_TriggerTransition = 'T_TriggerTransition',
	T_PartitionElem = 'T_PartitionElem',
	T_PartitionSpec = 'T_PartitionSpec',
	T_PartitionBoundSpec = 'T_PartitionBoundSpec',
	T_PartitionRangeDatum = 'T_PartitionRangeDatum',
	T_PartitionCmd = 'T_PartitionCmd',
	T_VacuumRelation = 'T_VacuumRelation',

	/*
	 * TAGS FOR REPLICATION GRAMMAR PARSE NODES (replnodes.h)
	 */
	T_IdentifySystemCmd = 'T_IdentifySystemCmd',
	T_BaseBackupCmd = 'T_BaseBackupCmd',
	T_CreateReplicationSlotCmd = 'T_CreateReplicationSlotCmd',
	T_DropReplicationSlotCmd = 'T_DropReplicationSlotCmd',
	T_StartReplicationCmd = 'T_StartReplicationCmd',
	T_TimeLineHistoryCmd = 'T_TimeLineHistoryCmd',
	T_SQLCmd = 'T_SQLCmd',

	/*
	 * TAGS FOR RANDOM OTHER STUFF
	 *
	 * These are objects that aren't part of parse/plan/execute node tree
	 * structures, but we give them NodeTags anyway for identification
	 * purposes (usually because they are involved in APIs where we want to
	 * pass multiple object types through the same pointer).
	 */
	T_TriggerData = 'T_TriggerData',				/* in commands/trigger.h */
	T_EventTriggerData = 'T_EventTriggerData',			/* in commands/event_trigger.h */
	T_ReturnSetInfo = 'T_ReturnSetInfo',			/* in nodes/execnodes.h */
	T_WindowObjectData = 'T_WindowObjectData',			/* private in nodeWindowAgg.c */
	T_TIDBitmap = 'T_TIDBitmap',				/* in nodes/tidbitmap.h */
	T_InlineCodeBlock = 'T_InlineCodeBlock',			/* in nodes/parsenodes.h */
	T_FdwRoutine = 'T_FdwRoutine',				/* in foreign/fdwapi.h */
	T_IndexAmRoutine = 'T_IndexAmRoutine',			/* in access/amapi.h */
	T_TableAmRoutine = 'T_TableAmRoutine',			/* in access/tableam.h */
	T_TsmRoutine = 'T_TsmRoutine',				/* in access/tsmapi.h */
	T_ForeignKeyCacheInfo = 'T_ForeignKeyCacheInfo',		/* in utils/rel.h */
	T_CallContext = 'T_CallContext',				/* in nodes/parsenodes.h */
	T_SupportRequestSimplify = 'T_SupportRequestSimplify',	/* in nodes/supportnodes.h */
	T_SupportRequestSelectivity = 'T_SupportRequestSelectivity',	/* in nodes/supportnodes.h */
	T_SupportRequestCost = 'T_SupportRequestCost',		/* in nodes/supportnodes.h */
	T_SupportRequestRows = 'T_SupportRequestRows',		/* in nodes/supportnodes.h */
	T_SupportRequestIndexCondition = 'T_SupportRequestIndexCondition',	/* in nodes/supportnodes.h */
}
